/* Написать программу, которая конкурентно рассчитает значение квадратов чисел
взятых из массива (2,4,6,8,10) и выведет их квадраты в stdout.*/

package main

import (
	"fmt"
	"sync"
)

func main() {

	arr := [...]int{2, 4, 6, 8, 10}

	//-------------------------CHAN-------------------------//
	// инициализируем канал
	// канал не буфферизированный, каждая запись в канал блокирует горутину
	ch := make(chan string)
	// для каждого элемента массива вызываем горутину
	for _, num := range arr {
		go func(n int) {
			// пишем данные в канал
			ch <- fmt.Sprintf("<CHAN> The square of the number %d is %d", n, n*n)
		}(num)
	}
	// читаем данные из канала и выводим
	for i := 0; i < len(arr); i++ {
		fmt.Printf("%s\n", <-ch)
	}

	//--------------------------WG--------------------------//

	// WG определяет группу горутин, которые должны выполняться вместе
	var wg sync.WaitGroup
	// задаем размер группы
	wg.Add(len(arr))
	for _, num := range arr {
		go func(n int) {
			// выводим данные
			fmt.Printf("<WG> The square of the number %d is %d\n", n, n*n)
			// уменьшаем группу(счетчик) на 1
			wg.Done()
		}(num)
	}
	// блокируем выполнение main, пока счетчик не будет равен нулю
	// (пока все горутины не выполнятся)
	wg.Wait()
}

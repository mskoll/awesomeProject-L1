/* Дана последовательность чисел: 2,4,6,8,10. Найти сумму их
квадратов(2^2+3^2+4^2….) с использованием конкурентных вычислений.*/

package main

import (
	"fmt"
	"sync"
)

func main() {
	nums := []int{2, 4, 6, 8, 10}

	//-------------------------CHAN-------------------------//
	// инициализируем канал
	// канал не буфферизированный, каждая запись в канал блокирует горутину
	ch := make(chan int)
	// для каждого элемента массива вызываем горутину
	for _, num := range nums {
		go func(n int) {
			// пишем данные в канал
			ch <- n * n
		}(num)
	}
	sum := 0
	// читаем данные из канала и выводим
	for i := 0; i < len(nums); i++ {
		sum += <-ch
	}

	fmt.Printf("<CHAN> Sum: %d\n", sum)

	//--------------------------WG--------------------------//

	// WG определяет группу горутин, которые должны выполняться вместе
	var wg sync.WaitGroup
	// задаем размер группы
	wg.Add(len(nums))
	sum = 0
	for _, num := range nums {
		go func(n int, sum *int) {
			// увеличиваем сумму
			*sum += n * n
			// уменьшаем группу(счетчик) на 1
			wg.Done()
		}(num, &sum)
	}
	// блокируем выполнение main, пока счетчик не будет равен нулю
	// (пока все горутины не выполнятся)
	wg.Wait()
	fmt.Printf("<WG> Sum: %d\n", sum)
}
